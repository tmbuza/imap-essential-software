from snakemake.utils import min_version

min_version("6.10.0")

# Configuration file containing all user-specified settings
configfile: "config/config.yml"

# # Debug information
# print("Configuration:")
# print(config)

required_tools = [f'{tool}.Rmd' for tool in config["basictools"]]
explore_viz = [f'{tool}.Rmd' for tool in config["exploreviz"]]
qc_tools = [f'{tool}.Rmd' for tool in config["qctools"]]
bioinfo_tools = [f'{tool}.Rmd' for tool in config["bioinfotools"]]
env_pkg_mgt = [f'{tool}.Rmd' for tool in config["envpkgmgt"]]
wkflow_mgt = [f'{tool}.Rmd' for tool in config["workflowmgt"]]
version_ctrl = [f'{tool}.Rmd' for tool in config["versionctrl"]]


report: "report/workflow.rst"

rule FINAL_TARGET:
    input: 
        "docs/index.html"
        # expand("software/toolcategory/{prefix}.Rmd", prefix=config["basictools"]),
        # expand("software/edatools/{prefix}.Rmd", prefix=config["exploreviz"]),
        # expand("software/qctools/{prefix}.Rmd", prefix=config["qctools"]),
        # expand("software/bioinftools/{prefix}.Rmd", prefix=config["bioinfotools"]),
        # expand("software/envpkgsys/{prefix}.Rmd", prefix=config["envpkgmgt"]),
        # expand("software/smktools/{prefix}.Rmd", prefix=config["workflowmgt"]),
        # expand("software/verctltools/{prefix}.Rmd", prefix=config["versionctrl"]),
        # "reports/snakemake_report.html",
        # "reports/project_tree.txt",
        # "dags/rulegraph.png",
        # "dags/rulegraph.svg", 

    output: 
        "software/alltools/required_tools.Rmd", 
    shell: 
        "cat {input} > {output}"


# Rule to generate the rule graph and create the dags folder if it doesn't exist
rule generate_rulegraph:
    output:
        directory("dags"),
        "dags/rulegraph.png",
        "dags/rulegraph.svg",

    shell:
        """
        snakemake --unlock;
        mkdir -p {output[0]};
        snakemake --rulegraph | dot -Tpng > {output[1]};
        snakemake --rulegraph | dot -Tsvg > {output[2]};
        """

# Rule to generate a directory tree
rule generate_tree:
    output:
        directory("output"),
        "reports/project_tree.txt"
    shell:
        """
        snakemake --unlock \
        && mkdir -p {output[0]} \
        && echo "Project Tree" > {output[1]} \
        && tree -L 2 . >> {output[1]}
        """

# Rule to generate SnakeMake report
rule snakemake_report:
    output:
        "reports/snakemake_report.html"
    shell:
        "snakemake --keep-going --use-conda --report {output[0]}"

rule required_tools_category: 
    output: 
        "software/toolcategory/{prefix}.Rmd"
    shell: 
        "echo {wildcards.prefix} > {output}"


rule data_exploration_tools: 
    output: 
        "software/edatools/{prefix}.Rmd"
    shell: 
        "echo {wildcards.prefix} > {output}"


rule quality_control_tools:  
    output: 
        "software/qctools/{prefix}.Rmd"
    shell: 
        "echo {wildcards.prefix} > {output}"


rule microbial_profiling_tools:  
    output: 
        "software/bioinftools/{prefix}.Rmd"
    shell: 
        "echo {wildcards.prefix} > {output}"


rule env_pkg_management_sys:  
    output: 
        "software/envpkgsys/{prefix}.Rmd"
    shell: 
        "echo {wildcards.prefix} > {output}"


rule workflow_management_sys:  
    output: 
        "software/smktools/{prefix}.Rmd"
    shell: 
        "echo {wildcards.prefix} > {output}"


rule version_control_sys:  
    output: 
        "software/verctltools/{prefix}.Rmd"
    shell: 
        "echo {wildcards.prefix} > {output}"

rule render_bs4_book:
    input:
        "index.Rmd",
        expand("software/toolcategory/{prefix}.Rmd", prefix=config["basictools"]),
        expand("software/edatools/{prefix}.Rmd", prefix=config["exploreviz"]),
        expand("software/qctools/{prefix}.Rmd", prefix=config["qctools"]),
        expand("software/bioinftools/{prefix}.Rmd", prefix=config["bioinfotools"]),
        expand("software/envpkgsys/{prefix}.Rmd", prefix=config["envpkgmgt"]),
        expand("software/smktools/{prefix}.Rmd", prefix=config["workflowmgt"]),
        expand("software/verctltools/{prefix}.Rmd", prefix=config["versionctrl"]),
        "reports/snakemake_report.html",
        "reports/project_tree.txt",
        "dags/rulegraph.png",
        "dags/rulegraph.svg", 
    output:
        "docs/index.html"
    shell:
        "R -e 'bookdown::render_book(input = \"index.Rmd\", output_format = \"bookdown::bs4_book\", output_dir = \"docs\")'"
